---
- name: Install required packages
  package:
    name:
      - git
      - make
      - gcc
    state: present

- name: Ensure the destination is clean
  file:
    path: "{{ repo_dest }}"
    state: absent

- name: Clone repository
  git:
    repo: "{{ repo_url }}"
    dest: "{{ repo_dest }}"

- name: Run make clean
  make:
    chdir: "{{ repo_dest }}/connectiontrackingProgram"
    target: clean

- name: Build connection tracking program
  make:
    chdir: "{{ repo_dest }}/connectiontrackingProgram"


- name: Create systemd service for conntrack_logger
  template:
    src: conntrack_logger.service.j2
    dest: /etc/systemd/system/conntrack_logger.service
    owner: root
    group: root
    mode: '0644'

- name: Set up logrotate for conntrack_logger logs
  template:
    src: logrotate_conntrack.j2
    dest: /etc/logrotate.d/conntrack_logger
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  
- name: Enable and start conntrack_logger service
  systemd:
    name: conntrack_logger
    enabled: yes
    state: stop

- name: Enable and start conntrack_logger service
  systemd:
    name: conntrack_logger
    enabled: yes
    state: started

- name: Ensure conntrack and network sysctl settings
  vars:
    conntrack_sysctls:
      net.netfilter.nf_conntrack_max:              2097152
      net.netfilter.nf_conntrack_buckets:          524288
      net.netfilter.nf_conntrack_udp_timeout:      7200
      net.netfilter.nf_conntrack_tcp_timeout_established: 432000  # TCP established timeout (s)
      net.ipv4.ip_forward:                         1
      net.ipv4.vs.conntrack:                       1
  block:
    - name: Apply sysctl setting for {{ item.key }}
      ansible.builtin.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        reload: no
      loop: "{{ conntrack_sysctls | dict2items(key_name='key', value_name='value') }}"

- name: Reload all sysctl settings
  ansible.builtin.command: sysctl --system

- name: Ensure iptables rule to ACCEPT forwarded NEW,ESTABLISHED,RELATED connections
  ansible.builtin.iptables:
    chain: FORWARD
    table: filter
    ctstate: NEW,ESTABLISHED,RELATED
    jump: ACCEPT
    state: present
    rule_num: 1  # insert at top of chain

